@model MusicPlataform.Client.Models.ArTrackViewModel
@using System.Web

@{
    ViewData["Title"] = "Inicio";
}

<!-- Artistas destacados -->
<div class="mb-5">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-white mb-0">Artistas destacados</h2>
        @if (Model.Tracks.Count() > 5)
        {
            <div class="mt-3">
                <a href="@Url.Action("MostrarArtist", "ArTrack")" class="btn btn-outline-light btn-sm">Ver todas</a>
            </div>
        }
    </div>
    <div class="row g-3">
        @foreach (var artist in Model.Artistas.Take(5))
        {
            var imageUrl = string.IsNullOrEmpty(artist.ImageUrl)
            ? "/img/default-artist.webp"
            : artist.ImageUrl.Replace("\\", "/");

            <div class="col-6 col-sm-4 col-md-3 col-lg-2 artist-item">
                <div class="card text-center shadow-sm border-0 bg-dark text-white" style="padding-top: 10px; padding-bottom: 8px;">
                    <a href="@Url.Action("ArtistaDetalle", "ArTrack", new { id = artist.Id })"
                       class="text-decoration-none text-white">
                        <img src="@imageUrl"
                             class="card-img-top rounded-circle mx-auto"
                             alt="@artist.Name"
                             style="width: 80px; height: 80px; object-fit: cover;">
                        <div class="card-body py-1 px-2">
                            <h6 class="card-title artist-name text-uppercase mb-1" style="font-size: 0.85rem;">@artist.Name</h6>
                            <p class="text-light small artist-bio mb-2" style="font-size: 0.75rem;">
                                @(string.IsNullOrEmpty(artist.Bio)
                                                            ? "Sin biografía"
                                                            : artist.Bio.Substring(0, Math.Min(40, artist.Bio.Length)) + "...")
                        </p>
                    </div>
                </a>
                <div class="card-footer bg-secondary border-0 py-1">
                    @if (User.Identity.IsAuthenticated)
                        {
                            <a href="@Url.Action("ArtistaDetalle", "ArTrack", new { id = artist.Id })"
                               class="btn btn-outline-light btn-sm">
                                <i class="bi bi-play-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("Login", "Users", new { returnUrl = Url.Action("Index", "ArTrack") })"
                               class="btn btn-outline-light btn-sm">
                                <i class="bi bi-play-fill"></i>
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Canciones destacadas -->
<div class="mb-5">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-white mb-0">Canciones destacadas</h2>
        @if (Model.Tracks.Count() > 5)
        {
            <div class="mt-3">
                <a href="@Url.Action("MostrarTracks", "ArTrack")" class="btn btn-outline-light btn-sm">Ver todas</a>
            </div>
        }
    </div>

    <div class="row g-2 justify-content-start" id="tracks-container">
        @foreach (var track in Model.Tracks.Take(5))
        {
            <div class="col-12 col-sm-6 col-md-4 col-lg-2">
                <div class="card bg-secondary text-white h-100">
                    <div class="card-body p-2">
                        <h6 class="card-title text-truncate mb-2 fw-bold">@track.Title</h6>
                        <p class="mb-1"><strong>Dur:</strong> @(TimeSpan.FromSeconds(track.DurationSeconds).ToString(@"mm\:ss"))</p>
                        <p class="mb-1 text-truncate"><strong>Art:</strong> @track.Artist</p>
                        <p class="mb-1 text-truncate"><strong>Gen:</strong> @track.Genre</p>
                    </div>
                    <div class="card-footer bg-dark border-0 py-1 px-2 text-end">
                        @if (User.Identity.IsAuthenticated && !string.IsNullOrEmpty(track.AudioUrl))
                        {
                            <button class="btn btn-outline-light btn-sm play-button"
                                    data-audio="@track.AudioUrl"
                                    data-title="@track.Title"
                                    data-artist="@track.Artist"
                                    onclick="handlePlayClick(this)">
                                <i class="bi bi-play-fill"></i>
                            </button>
                            <div class="dropdown d-inline ms-1">
                                <button class="btn btn-warning btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    + Lista
                                </button>
                                <ul class="dropdown-menu dropdown-menu-dark playlist-dropdown" data-track-id="@track.Id">
                                    <li><span class="dropdown-item text-muted">Cargando...</span></li>
                                </ul>
                            </div>

                        }
                        else
                        {
                            <a href="@Url.Action("Login", "Users", new { returnUrl = Url.Action("Index", "ArTrack") })"
                               class="btn btn-outline-secondary btn-sm">
                                <i class="bi bi-play-fill"></i>
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Botón para ver todas -->
    @* @if (Model.Tracks.Count() > 5)
    {
        <div class="mt-3">
            <a href="@Url.Action("MostrarTracks", "ArTrack")" class="btn btn-outline-light btn-sm">Ver todas</a>
        </div>
    } *@
</div>

@section Scripts {
    <script src="~/js/site.js"></script>
    <script src="~/js/add-to-playlist.js"></script>

}
